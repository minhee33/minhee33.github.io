# 깃허브 레포지토리의 action 탭에 나타나는 workflow 이름
name: Deploy to GitHub Pages

# workflow의 trigger
on:
  # main branch에서 push하면 workflow가 시작함.
  push:
    branches: [main]

  # 워크플로 수동 트리거
  workflow_dispatch:
  # 해당 yml에서는 설정하지 않음.

# 권한을 지정하여, 각 작업에 대해 서로 다른 권한 집합을 구성할 수 있음.
permissions:
  # contents 작업 읽기 작업 가능
  contents: read
  # pages 작업 쓰기 작업 가능
  pages: write
  # id-token 쓰기 작업 가능
  id-token: write

# 동시성 관리
# 동일한 동시성 그룹 내에서 단일 작업 또는 workflow가 한 번에 실행되도록 함.
concurrency:
  # 동시성 그룹을 정의하는 키
  group: ${{ github.workflow }}-${{ github.ref }}
  # 새로운 작업이 시작되면 동시성 그룹 내에서 진행 중인 이전 작업을 취소할 것인지 설정함.
  # true: 기존 작업 취소 후 새로운 작업 실행됨.
  cancel-in-progress: true

# 수행되어야 하는 작업
jobs:
  # 첫번째 작업 이름
  build:
    # 작업 환경을 우분투 최신버전으로 함.
    runs-on: ubuntu-latest
    # shell script나 action을 실행.
    steps:
      # step 이름 및 실행 action
      # action을 사용할 때에는 "uses"
      # repository를 checkout함
      - name: Checkout repository
        uses: actions/checkout@v3

      # node를 세팅함
      - name: Set up Node
        uses: actions/setup-node@v3
        # 실행 부가 정보
        with:
          node-version: 16.x
          cache: 'npm'

      # Page를 세팅함
      - name: Setup Pages
        uses: actions/configure-pages@v3

      # cache를 저장함
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      # shell script 실행시 "run"
      - name: Install dependencies
        run: npm ci

      - name: Build with vite
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./dist

  # 두번째 작업 이름
  deploy:
    # 환경 변수 설정
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # 작업 환경을 우분투 최신버전으로 함.
    runs-on: ubuntu-latest
    # 의존관계. build가 완료될 때까지 기다림.
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1.2.4
